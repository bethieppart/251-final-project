df = read.csv("../CombinedOutput.csv", header = FALSE)
head(df)
df = read.csv("CombinedOutput.csv", header = FALSE)
df = read.csv("../../CombinedOutput.csv", header = FALSE)
head(df)
require("ggplot2")
df = read.csv("../../CombinedOutput.csv", header = FALSE)
colnames(df)<-c("date", "location", "label", "tweetCount", "avgPolarity", "totalSentiment","avgSentiment","timestamp")
df$location <- sapply(df$location, tolower)
names(df$location)<-NULL
df$date<-substr(gsub("[^0-9/-]","", df$date), 0, 10)
stateNames<-sapply(state.name, tolower)
names(stateNames)<-NULL
A<-df[df$location %in% c("united states", stateNames),]
by(A$location, A$location, length)
by(A$location, A$label, length)
pdf("TwitterElection.pdf")
ggplot(A, aes(x=label, y=tweetCount, fill=label)) + stat_summary(fun.y="sum", geom="bar") +theme(axis.text.x = element_text(angle = 90)) + ggtitle("Tweet Counts By Topic") + ylab("Tweet Count")
ggplot(A, aes(x=label, y=avgPolarity, fill=label)) + stat_summary(fun.y="mean", geom="bar") +theme(axis.text.x = element_text(angle = 90)) + ggtitle("Average Polarity By Topic") + ylab("Tweet Count")
ggplot(A, aes(x=label, y=avgSentiment, fill=label)) + stat_summary(fun.y="mean", geom="bar") +theme(axis.text.x = element_text(angle = 90)) + ggtitle("Average Sentiment By Topic") + ylab("Tweet Count")
#Raw Counts
ggplot(A[A$location=="united states",]) + geom_line(aes(x=date, y=tweetCount, group=label, color=label))+theme(axis.text.x = element_text(angle = 90)) + ggtitle("Tweet Count Time Series") + ylab("Count")
#Polarity
ggplot(A[A$location=="united states",],aes(x=date, y=avgPolarity, group=label,color=label)) + geom_smooth(aes(group=label,color=label)) + geom_line(aes(group=label,color=label), size=1) + stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90)) + ggtitle("Average Polarity Time Series")
ggplot(A[A$location=="united states",],aes(x=date, y=avgPolarity, group=label,color=label)) + geom_smooth(aes(group=label,color=label)) + geom_line(aes(group=label,color=label), size=1) + stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90)) + facet_wrap(~label) + ggtitle("Average Polarity Time Series")
#Sentiment
ggplot(A[A$location=="united states",],aes(x=date, y=avgSentiment, group=label,color=label)) + geom_smooth(aes(group=label,color=label)) + geom_line(aes(group=label,color=label), size=1) + stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90))+ ggtitle("Average Sentiment Time Series")
ggplot(A[A$location=="united states",],aes(x=date, y=avgSentiment, group=label,color=label)) + geom_smooth(aes(group=label,color=label)) + geom_line(aes(group=label,color=label), size=1) + stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90)) + facet_wrap(~label)+ ggtitle("Average Sentiment Time Series")
#Need to get 538 polling data, then splice it into my time series charts.
#Maps would be nice, but seems like something more for tableau or another teammate to do
dev.off()
head(A)
nrow(A)
write.csv(A,"TwitterOutputJustStates.csv")
write.csv(df, "TwitterOutputCleaned.csv")
library(dplyr)
library(tidyr)
library(ggplot2)
library(viridis)
library(ggthemes)
# this next code will need to be adapted if you don't have a ../data/ folder...
# alternatively, if that link stops working, there's a static copy at http://ellisp.github.io/data/polls.csv
www <- "http://projects.fivethirtyeight.com/general-model/president_general_polls_2016.csv"
download.file(www, destfile = "../data/polls.csv")
# download data
polls_orig <- read.csv("../data/polls.csv", stringsAsFactors = FALSE)
plz <- read.csv("../data/polls.csv", stringsAsFactors = FALSE)
head(plz)
plz$url<-NULL
head(plz)
ggplot(plz, aes(y=forecastdate)) + geom_line(aes(y=rawpoll_trump), color='blue')
ggplot(plz, aes(y=forecastdate)) + geom_line(aes(y=rawpoll_trump))
ggplot(plz, aes(y=forecastdate)) + geom_line(aes(x=rawpoll_trump))
ggplot(plz, aes(x=forecastdate)) + geom_line(aes(y=rawpoll_trump))
plz
summary(plz)
unique(plz$forecastdate)
plz <- read.csv("../data/polls.csv", stringsAsFactors = FALSE)
unique(plz$forecastdate)
nrow(plz)
head(plz)
head(plz, 100)
unique(plz$createddate)
ggplot(plz, aes(x=createdate)) + geom_line(aes(y=rawpoll_trump))
unique(plz$createddate)
ggplot(plz, aes(x=createddate)) + geom_line(aes(y=rawpoll_trump))
ggplot(plz, aes(x=createddate)) + geom_line(aes(y=rawpoll_trump)) +
scale_x_date(labels = date_format("%m-%Y"))
require(scales)
ggplot(plz, aes(x=createddate)) + geom_line(aes(y=rawpoll_trump)) +
scale_x_date(labels = date_format("%m-%Y"))
plz$createddate<-as.Date(plz$createddate)
ggplot(plz, aes(x=createddate)) + geom_line(aes(y=rawpoll_trump)) +
scale_x_date(labels = date_format("%m-%Y"))
plz$createddate
plz <- read.csv("../data/polls.csv", stringsAsFactors = FALSE)
plz$url<-NULL
plz$createddate
strptime(plz$createddate,"%m/%d/%Y")
strptime(plz$createddate,"%mm/%dd/%YY")
plz$createddate
strftime(plz$createddate,"%m/%d/%Y")
strftime(plz$createddate)
as.Date(plz$createddate,"%m/%d/%Y")
as.Date(plz$createddate,"20%m/%d/%Y")
as.Date(plz$createddate,"%m/%d/%Y")
plz$createddate
as.Date(plz$createddate,"%m%d%Y")
plz$createddate
as.Date(plz$createddate,"%m/%d/%Y")
head(plz$enddate)
head(plz$createddate)
plz$createddate
as.Date(plz$createddate,"%M/%d/%Y")
as.Date(plz$createddate,"%M/%d/%YY")
strftime(plz$createddate,"%M/%d/%Y")
strftime(plz$createddate,"%m/%d/%Y")
strptime(plz$createddate,"%m/%d/%Y")
?strptime
strptime(plz$createddate,"%d")
range(strptime(plz$createddate,"%d"))
range(plz$createddate)
head(plz)
nrow(plz[plz$state=="U.S."])
nrow(plz[plz$state=="U.S.",])
plz$createddate
range(plz$createddate)
range(strptime(plz$createddate,"%d"))
head(plz$createddate)
head(strptime(plz$createddate,"%d"))
plz<-plz[plz$state=='U.S.',]
head(strptime(plz$createddate,"%d"))
head(plz$createddate)
range(strptime(plz$createddate,"%m/%d/%y"))
plz$date<-strptime(plz$createddate, %m/%d/%y)
plz$date<-strptime(plz$createddate, '%m/%d/%y')
plz$date
ggplot(plz, aes(x=date)) + geom_line(aes(y=rawpoll_trump)) +
scale_x_date(labels = date_format("%m-%Y"))
str(plz$date)
str(as.Date(plz$date))
ggplot(plz, aes(x=as.Date(date))) + geom_line(aes(y=rawpoll_trump)) +
scale_x_date(labels = date_format("%m-%Y"))
plz$date<-as.Date(strptime(plz$createddate, '%m/%d/%y'))
plz$date
by(plz$rawpoll_trump, plz$date, mean)
do.call(rbind.data.frame, by(plz$rawpoll_trump, plz$date, mean))
do.call(rbind.data.frame, by(plz$rawpoll_trump, plz$date, mean, simplify = FALSE))
head(plz)
do.call(rbind.data.frame, by(plz[,c('rawpoll_trump','rawpoll_clinton','rawpoll_johnson')], plz$date, mean, simplify = FALSE))
trmp<-do.call(rbind.data.frame, by(plz$rawpoll_trump, plz$date, mean, simplify = FALSE))
clint<-do.call(rbind.data.frame, by(plz$rawpoll_clinton, plz$date, mean, simplify = FALSE))
johns<-do.call(rbind.data.frame, by(plz$rawpoll_johnson, plz$date, mean, simplify = FALSE))
head(trmp)
head(clint)
names(trmp)<-c('date','trump_avg')
names(trmp)<-c('trump_avg')
head(trmp)
names(trmp)<-c('trump_avg')
names(clint)<-c('clint_avg')
names(johns)<-c('johns_avg')
row.names(trmp)
row.names(clint)
pollAvg<-cbind(row.names(trmp), trmp$trump_avg,clint$clint_avg,johns$johns_avg)
head(pollAvg)
pollAvg<-data.frame(date=row.names(trmp), trump_avg=trmp$trump_avg,clint_avg=clint$clint_avg,johns_avg=johns$johns_avg)
head(pollAvg)
ggplot(pollAvg, aes(x=date)) + geom_line(aes(y=trump_avg)) + geom_line(aes(y=clint_avg)) +
scale_x_date(labels = date_format("%m-%Y"))
str(pollAvg$date)
str(as.Date(pollAvg$date))
ggplot(pollAvg, aes(x=as.Date(date))) + geom_line(aes(y=trump_avg)) + geom_line(aes(y=clint_avg)) +
scale_x_date(labels = date_format("%m-%Y"))
ggplot(pollAvg, aes(x=as.Date(date))) + geom_point(aes(y=trump_avg, color="Trump")) + geom_point(aes(y=clint_avg, color="Clinton")) +
scale_x_date(labels = date_format("%m-%Y"))
ggplot(pollAvg, aes(x=as.Date(date))) + geom_point(aes(y=trump_avg, color="Trump")) + geom_point(aes(y=clint_avg, color="Clinton")) +
scale_x_date(labels = date_format("%m-%Y")) + ylim(0,100)
ggplot(pollAvg, aes(x=as.Date(date))) + geom_point(aes(y=trump_avg, color="Trump")) + geom_point(aes(y=clint_avg, color="Clinton")) +
scale_x_date(labels = date_format("%m-%Y")) + ylim(25,75)
ggplot(pollAvg, aes(x=as.Date(date))) + geom_point(aes(y=clint_avg, color="Clinton")) + geom_point(aes(y=trump_avg, color="Trump")) +
scale_x_date(labels = date_format("%m-%Y")) + ylim(25,75)
ggplot(pollAvg, aes(x=as.Date(date))) + geom_point(aes(y=clint_avg, group="Clinton")) + geom_point(aes(y=trump_avg, group="Trump")) +
scale_x_date(labels = date_format("%m-%Y")) + ylim(25,75)
ggplot(pollAvg, aes(x=as.Date(date))) + geom_point(aes(y=clint_avg, group="Clinton", color="Blue")) + geom_point(aes(y=trump_avg, group="Trump", color="Red")) +
scale_x_date(labels = date_format("%m-%Y")) + ylim(25,75)
ggplot(pollAvg, aes(x=as.Date(date))) + geom_point(aes(y=clint_avg, group="Clinton"), color="Blue") + geom_point(aes(y=trump_avg, group="Trump") color="Red") +
scale_x_date(labels = date_format("%m-%Y")) + ylim(25,75)
ggplot(pollAvg, aes(x=as.Date(date))) + geom_point(aes(y=clint_avg, group="Clinton"), color="Blue") + geom_point(aes(y=trump_avg, group="Trump"), color="Red") +
scale_x_date(labels = date_format("%m-%Y")) + ylim(25,75)
ggplot(pollAvg, aes(x=as.Date(date))) + geom_point(aes(y=clint_avg, color="Clinton"), color="Blue") + geom_point(aes(y=trump_avg, color="Trump"), color="Red") +
scale_x_date(labels = date_format("%m-%Y")) + ylim(25,75)
ggplot(pollAvg, aes(x=as.Date(date))) + geom_point(aes(y=clint_avg, color="Clinton")) + geom_point(aes(y=trump_avg, color="Trump")) +
scale_x_date(labels = date_format("%m-%Y")) + ylim(25,75)+scale_color_manual(name = "Candidate",
labels = c("Trump", "Clinton"),
values = c("Red","Blue"))
ggplot(pollAvg, aes(x=as.Date(date))) + geom_point(aes(y=clint_avg, color="Clinton")) + geom_smooth(aes(color="Clinton")) + geom_point(aes(y=trump_avg, color="Trump")) +
scale_x_date(labels = date_format("%m-%Y")) + ylim(25,75)+scale_color_manual(name = "Candidate",
labels = c("Trump", "Clinton"),
values = c("Red","Blue"))
ggplot(pollAvg, aes(x=as.Date(date))) + geom_point(aes(y=clint_avg, color="Clinton")) + geom_smooth(aes(y=clint_avg, color="Clinton")) + geom_point(aes(y=trump_avg, color="Trump")) +
scale_x_date(labels = date_format("%m-%Y")) + ylim(25,75)+scale_color_manual(name = "Candidate",
labels = c("Trump", "Clinton"),
values = c("Red","Blue"))
ggplot(pollAvg, aes(x=as.Date(date))) + geom_point(aes(y=clint_avg, color="Clinton")) + geom_smooth(aes(y=clint_avg, color="Clinton")) + geom_point(aes(y=trump_avg, color="Trump")) + geom_smooth(aes(y=trump_avg, color="Trump")) +
scale_x_date(labels = date_format("%m-%Y")) + ylim(25,75)+scale_color_manual(name = "Candidate",
labels = c("Trump", "Clinton"),
values = c("Red","Blue"))
ggplot(pollAvg, aes(x=as.Date(date))) + geom_point(aes(y=clint_avg, color="Clinton")) + geom_smooth(aes(y=clint_avg, color="Clinton")) + geom_point(aes(y=trump_avg, color="Trump")) + geom_smooth(aes(y=trump_avg, color="Trump")) +
scale_x_date(labels = date_format("%m-%Y")) + ylim(25,75)+scale_color_manual(name = "Candidate",
labels = c("Clinton", "Trump"),
values = c("Blue","Red"))
ggplot(pollAvg, aes(x=as.Date(date))) + geom_point(aes(y=clint_avg, color="Clinton")) + geom_smooth(aes(y=clint_avg, color="Clinton")) + geom_point(aes(y=trump_avg, color="Trump")) + geom_smooth(aes(y=trump_avg, color="Trump")) +
scale_x_date(labels = date_format("%m-%Y")) + ylim(25,75)+scale_color_manual(name = "Candidate",
labels = c("Clinton", "Trump"),
values = c("Blue","Red")) + xlab("Date") + ylab("Polling Average") + ggtitle("National Election Polling Averages")
df1 = read.csv("../data/CombinedOutput_2015_12-2016_4.csv", header = FALSE)
df2 = read.csv("../data/CombinedOutput_20160831_20161209.csv", header = FALSE)
df3 = read.csv("../data/CombinedOutputAnthony.csv", header = FALSE)
df4 = read.csv("../data/CombinedOutputBeth.csv", header = FALSE)
df <- rbind(df1,df2,df3,df4)
head(df)
head(df1)
head(df2)
head(df3)
head(df4)
head(df2,100)
colnames(df)<-c("date", "location", "label", "tweetCount", "avgPolarity", "totalSentiment","avgSentiment","timestamp")
df$location <- sapply(df$location, tolower)
names(df$location)<-NULL
df$date<-substr(gsub("[^0-9/-]","", df$date), 0, 10)
stateNames<-sapply(state.name, tolower)
names(stateNames)<-NULL
A<-df[df$location %in% c("united states", stateNames),]
by(A$location, A$location, length)
by(A$location, A$label, length)
ggplot(A, aes(x=label, y=tweetCount, fill=label)) + stat_summary(fun.y="sum", geom="bar") +theme(axis.text.x = element_text(angle = 90)) + ggtitle("Tweet Counts By Topic") + ylab("Tweet Count")
ggplot(A, aes(x=label, y=avgPolarity, fill=label)) + stat_summary(fun.y="mean", geom="bar") +theme(axis.text.x = element_text(angle = 90)) + ggtitle("Average Polarity By Topic") + ylab("Tweet Count")
ggplot(A, aes(x=label, y=avgSentiment, fill=label)) + stat_summary(fun.y="mean", geom="bar") +theme(axis.text.x = element_text(angle = 90)) + ggtitle("Average Sentiment By Topic") + ylab("Tweet Count")
ggplot(A[A$location=="united states",]) + geom_line(aes(x=date, y=tweetCount, group=label, color=label))+theme(axis.text.x = element_text(angle = 90)) + ggtitle("Tweet Count Time Series") + ylab("Count")
str(A$date)
str(as.Date(A$date))
A$date<-as.Date(A$date)
ggplot(A[A$location=="united states",]) + scale_x_date(labels = date_format("%m-%Y")) + geom_line(aes(x=date, y=tweetCount, group=label, color=label))+theme(axis.text.x = element_text(angle = 90)) + ggtitle("Tweet Count Time Series") + ylab("Count")
ggplot(A[A$location=="united states",],aes(x=date, y=avgPolarity, group=label,color=label))+ scale_x_date(labels = date_format("%m-%Y"))  + geom_smooth(aes(group=label,color=label)) + geom_line(aes(group=label,color=label), size=1) + stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90)) + ggtitle("Average Polarity Time Series")
ggplot(A[A$location=="united states",],aes(x=date, y=avgPolarity, group=label,color=label))+ scale_x_date(labels = date_format("%m-%Y"))  + geom_smooth(aes(group=label,color=label)) + geom_line(aes(group=label,color=label), size=1) + stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90)) + facet_wrap(~label) + ggtitle("Average Polarity Time Series")
ggplot(A[A$location=="united states",],aes(x=date, y=avgSentiment, group=label,color=label))+ scale_x_date(labels = date_format("%m-%Y"))  + geom_smooth(aes(group=label,color=label)) + geom_line(aes(group=label,color=label), size=1) + stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90))+ ggtitle("Average Sentiment Time Series")
ggplot(A[A$location=="united states",],aes(x=date, y=avgSentiment, group=label,color=label))+ scale_x_date(labels = date_format("%m-%Y"))  + geom_smooth(aes(group=label,color=label)) + geom_line(aes(group=label,color=label), size=1) + stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90)) + facet_wrap(~label)+ ggtitle("Average Sentiment Time Series")
ggplot(A[A$location=="united states" && A$label!+"political",]) + scale_x_date(labels = date_format("%m-%Y")) + geom_line(aes(x=date, y=tweetCount, group=label, color=label))+theme(axis.text.x = element_text(angle = 90)) + ggtitle("Tweet Count Time Series") + ylab("Count")
ggplot(A[A$location=="united states" && A$label!="political",]) + scale_x_date(labels = date_format("%m-%Y")) + geom_line(aes(x=date, y=tweetCount, group=label, color=label))+theme(axis.text.x = element_text(angle = 90)) + ggtitle("Tweet Count Time Series") + ylab("Count")
ggplot(A[A$location=="united states" & A$label!="political",]) + scale_x_date(labels = date_format("%m-%Y")) + geom_line(aes(x=date, y=tweetCount, group=label, color=label))+theme(axis.text.x = element_text(angle = 90)) + ggtitle("Tweet Count Time Series") + ylab("Count")
ggplot(A, aes(x=label, y=tweetCount, fill=label)) + stat_summary(fun.y="sum", geom="bar") +theme(axis.text.x = element_text(angle = 90)) + ggtitle("Tweet Counts By Topic") + ylab("Tweet Count")
ggplot(A[A$label!="political",], aes(x=label, y=tweetCount, fill=label)) + stat_summary(fun.y="sum", geom="bar") +theme(axis.text.x = element_text(angle = 90)) + ggtitle("Tweet Counts By Topic") + ylab("Tweet Count")
ggplot(A, aes(x=label, y=avgPolarity, fill=label)) + stat_summary(fun.y="mean", geom="bar") +theme(axis.text.x = element_text(angle = 90)) + ggtitle("Average Polarity By Topic") + ylab("Tweet Count")
ggplot(A, aes(x=label, y=avgSentiment, fill=label)) + stat_summary(fun.y="mean", geom="bar") +theme(axis.text.x = element_text(angle = 90)) + ggtitle("Average Sentiment By Topic") + ylab("Tweet Count")
ggplot(A, aes(x=label, y=avgPolarity, fill=label)) + stat_summary(fun.y="mean", geom="bar") +theme(axis.text.x = element_text(angle = 90)) + ggtitle("Average Polarity By Topic") + ylab("Tweet Count")
ggplot(A, aes(x=label, y=avgSentiment, fill=label)) + stat_summary(fun.y="mean", geom="bar") +theme(axis.text.x = element_text(angle = 90)) + ggtitle("Average Sentiment By Topic") + ylab("Tweet Count")
ggplot(A[A$location=="united states",],aes(x=date, y=avgSentiment, group=label,color=label))+ scale_x_date(labels = date_format("%m-%Y"))  + geom_smooth(aes(group=label,color=label)) + geom_line(aes(group=label,color=label), size=1) + stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90))+ ggtitle("Average Sentiment Time Series")
ggplot(A[A$location=="united states",],aes(x=date, y=avgSentiment, group=label,color=label))+ scale_x_date(labels = date_format("%m-%Y"))  + geom_smooth(aes(group=label,color=label)) + geom_line(aes(group=label,color=label), size=1) + stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90)) + facet_wrap(~label)+ ggtitle("Average Sentiment Time Series")
ggplot(A[A$location=="united states",],aes(x=date, y=avgSentiment, group=label,color=label))+ scale_x_date(labels = date_format("%m-%Y"))  + geom_smooth(aes(group=label,color=label))  + stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90))+ ggtitle("Average Sentiment Time Series")
ggplot(A[A$location=="united states",],aes(x=date, y=avgSentiment, group=label,color=label))+ scale_x_date(labels = date_format("%m-%Y"))  + geom_smooth(aes(group=label,color=label)) + stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90)) + facet_wrap(~label)+ ggtitle("Average Sentiment Time Series")
ggplot(A[A$location=="united states",],aes(x=date, y=avgPolarity, group=label,color=label))+ scale_x_date(labels = date_format("%m-%Y"))  + geom_smooth(aes(group=label,color=label)) + geom_line(aes(group=label,color=label), size=1) + stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90)) + ggtitle("Average Polarity Time Series")
ggplot(A[A$location=="united states",],aes(x=date, y=avgPolarity, group=label,color=label))+ scale_x_date(labels = date_format("%m-%Y"))  + geom_smooth(aes(group=label,color=label)) + geom_line(aes(group=label,color=label), size=1) + stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90)) + facet_wrap(~label) + ggtitle("Average Polarity Time Series")
ggplot(A[A$location=="united states",],aes(x=date, y=avgPolarity, group=label,color=label))+ scale_x_date(labels = date_format("%m-%Y"))  + geom_smooth(aes(group=label,color=label)) +  stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90)) + facet_wrap(~label) + ggtitle("Average Polarity Time Series")
ggplot(A[A$location=="united states",],aes(x=date, y=avgPolarity, group=label,color=label))+ scale_x_date(labels = date_format("%m-%Y"))  + geom_smooth(aes(group=label,color=label)) +  stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90)) + ggtitle("Average Polarity Time Series")
ggplot(A[A$location=="united states",],aes(x=date, y=avgPolarity, group=label,color=label))+ scale_x_date(labels = date_format("%m-%Y"))  + geom_smooth(aes(group=label,color=label)) +  stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90)) + facet_wrap(~label) + ggtitle("Average Polarity Time Series")
ggplot(A[A$location=="united states" & A$label!="political",]) + scale_x_date(labels = date_format("%m-%Y")) + geom_line(aes(x=date, y=tweetCount, group=label, color=label))+theme(axis.text.x = element_text(angle = 90)) + ggtitle("Tweet Count Time Series") + ylab("Count")
source('~/GitProjects/251-final-project/visualizations/TwitterAnaysis.R')
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
source('~/GitProjects/251-final-project/visualizations/TwitterAnaysis.R')
source('~/GitProjects/251-final-project/visualizations/TwitterAnaysis.R')
source('~/GitProjects/251-final-project/visualizations/TwitterAnaysis.R')
install.packages(("ggthemes"))
install.packages(("ggthemes"))
install.packages("sales")
install.packages("scales")
install.packages("scales")
source('~/GitProjects/251-final-project/visualizations/TwitterAnaysis.R')
pdf("TwitterElection.pdf")
ggplot(A[A$label!="political",], aes(x=label, y=tweetCount, fill=label)) + stat_summary(fun.y="sum", geom="bar") +theme(axis.text.x = element_text(angle = 90)) + ggtitle("Tweet Counts By Topic") + ylab("Tweet Count")
ggplot(A, aes(x=label, y=avgPolarity, fill=label)) + stat_summary(fun.y="mean", geom="bar") +theme(axis.text.x = element_text(angle = 90)) + ggtitle("Average Polarity By Topic") + ylab("Tweet Count")
ggplot(A, aes(x=label, y=avgSentiment, fill=label)) + stat_summary(fun.y="mean", geom="bar") +theme(axis.text.x = element_text(angle = 90)) + ggtitle("Average Sentiment By Topic") + ylab("Tweet Count")
#Raw Counts
ggplot(A[A$location=="united states" & A$label!="political",]) + scale_x_date(labels = date_format("%m-%Y")) + geom_line(aes(x=date, y=tweetCount, group=label, color=label))+theme(axis.text.x = element_text(angle = 90)) + ggtitle("Tweet Count Time Series") + ylab("Count")
#Polarity
ggplot(A[A$location=="united states",],aes(x=date, y=avgPolarity, group=label,color=label))+ scale_x_date(labels = date_format("%m-%Y"))  + geom_smooth(aes(group=label,color=label)) +  stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90)) + ggtitle("Average Polarity Time Series")
ggplot(A[A$location=="united states",],aes(x=date, y=avgPolarity, group=label,color=label))+ scale_x_date(labels = date_format("%m-%Y"))  + geom_smooth(aes(group=label,color=label)) +  stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90)) + facet_wrap(~label) + ggtitle("Average Polarity Time Series")
#Sentiment
ggplot(A[A$location=="united states",],aes(x=date, y=avgSentiment, group=label,color=label))+ scale_x_date(labels = date_format("%m-%Y"))  + geom_smooth(aes(group=label,color=label))  + stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90))+ ggtitle("Average Sentiment Time Series")
ggplot(A[A$location=="united states",],aes(x=date, y=avgSentiment, group=label,color=label))+ scale_x_date(labels = date_format("%m-%Y"))  + geom_smooth(aes(group=label,color=label)) + stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90)) + facet_wrap(~label)+ ggtitle("Average Sentiment Time Series")
#Need to get 538 polling data, then splice it into my time series charts.
#Maps would be nice, but seems like something more for tableau or another teammate to do
dev.off()
ggplot(pollAvg, aes(x=as.Date(date))) + geom_point(aes(y=clint_avg, color="Clinton")) + geom_smooth(aes(y=clint_avg, color="Clinton")) + geom_point(aes(y=trump_avg, color="Trump")) + geom_smooth(aes(y=trump_avg, color="Trump")) +
scale_x_date(labels = date_format("%m-%Y")) + ylim(25,75)+scale_color_manual(name = "Candidate",
labels = c("Clinton", "Trump"),
values = c("Blue","Red")) + xlab("Date") + ylab("Polling Average") + ggtitle("National Election Polling Averages")
require("scales")
require("ggplot2")
ggplot(pollAvg, aes(x=as.Date(date))) + geom_point(aes(y=clint_avg, color="Clinton")) + geom_smooth(aes(y=clint_avg, color="Clinton")) + geom_point(aes(y=trump_avg, color="Trump")) + geom_smooth(aes(y=trump_avg, color="Trump")) +
scale_x_date(labels = date_format("%m-%Y")) + ylim(25,75)+scale_color_manual(name = "Candidate",
labels = c("Clinton", "Trump"),
values = c("Blue","Red")) + xlab("Date") + ylab("Polling Average") + ggtitle("National Election Polling Averages")
library("scales")
write.csv(df,"AllTwitterDataCleaned.csv")
write.csv(A,"StatesAndUSATwitterDataCleaned.csv")
ggplot(A[A$location=="united states" & A$label!="political",]) + scale_x_date(labels = date_format("%m-%Y")) + geom_line(aes(x=date, y=tweetCount, group=label, color=label))+theme(axis.text.x = element_text(angle = 90)) + ggtitle("Tweet Count Time Series") + ylab("Count")
library(scales)
ggplot(A[A$location=="united states",],aes(x=date, y=avgPolarity, group=label,color=label))+ scale_x_date(labels = date_format("%m-%Y"))  + geom_smooth(aes(group=label,color=label)) +  stat_summary(fun.y="mean", geom="point")+theme(axis.text.x = element_text(angle = 90)) + ggtitle("Average Polarity Time Series")
